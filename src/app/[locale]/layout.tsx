import type { Metadata } from "next";
import { Lexend } from "next/font/google";
import "../globals.css";
import { cn } from "@/utils/twMerge";
import { routing } from "@/i18n/routing";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { getMessages, setRequestLocale } from "next-intl/server";

const lexend = Lexend({
  variable: "--font-lexend",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}

export function generateStaticParams () {
  return routing.locales.map((locale) => ({locale}));
};


export default async function LocaleLayout({
  children, 
  params
}: Props ) {

  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  };


  setRequestLocale(locale);

  const messages = await getMessages({ locale });

  return (
    <html lang={locale}>
      <body
        className={cn(
          ' antialiased',
          lexend.className)}
      >
        <NextIntlClientProvider messages={messages}>
          <main>
            {children}
          </main>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
